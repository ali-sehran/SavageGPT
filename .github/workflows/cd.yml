# .github/workflows/cd.yml
name: CD

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted
    if: github.repository_owner == 'ali-sehran' && github.actor == 'ali-sehran'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy code to /opt/savagegpt
        run: |
          sudo rm -rf /opt/savagegpt
          sudo mkdir -p /opt/savagegpt
          sudo cp -r $GITHUB_WORKSPACE/* /opt/savagegpt
          sudo chown -R $(whoami):$(whoami) /opt/savagegpt

      - name: Write secret env file
        run: |
          sudo tee /etc/savagegpt.env >/dev/null <<EOF
          GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}
          NGROK_AUTH_TOKEN=${{ secrets.NGROK_AUTH_TOKEN }}
          EOF

      - name: Copy systemd unit files
        run: |
          sudo cp infra/savagegpt.service /etc/systemd/system/savagegpt.service
          sudo cp infra/ngrok.service   /etc/systemd/system/ngrok.service

      - name: Reload & enable services
        run: |
          sudo systemctl daemon-reload
          sudo systemctl enable savagegpt.service
          sudo systemctl enable ngrok.service

      - name: Restart services
        run: |
          sudo systemctl restart savagegpt.service
          sudo systemctl restart ngrok.service

      - name: Show ngrok URL
        run: |
          # Give ngrok a moment to start
          sleep 5

          # Use Python to fetch and parse the ngrok API
          NGROK_URL=$(python3 - <<'PYCODE'
          import json, urllib.request
          data = json.loads(urllib.request.urlopen("http://127.0.0.1:4040/api/tunnels").read())
          for t in data.get("tunnels", []):
              if t.get("name") == "savagegpt":
                  print(t["public_url"])
                  break
          else:
              if data.get("tunnels"):
                  print(data["tunnels"][0]["public_url"])
          PYCODE
          )

                    echo "::notice title=ngrok_url::$NGROK_URL"
                    echo "ðŸš€ SavageGPT is live at: $NGROK_URL"
